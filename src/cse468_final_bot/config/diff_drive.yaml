bot_joint_state_controller:
    # The joint state controller handles publishing transforms for any moving joints
    type: "joint_state_controller/JointStateController"
    publish_rate: 50

bot_diff_drive_controller:
    type: "diff_drive_controller/DiffDriveController"
    publish_rate: 50

    left_wheel: ['base_link_to_fl_diff_wheel', 'base_link_to_ml_diff_wheel', 'base_link_to_rl_diff_wheel']
    right_wheel: ['base_link_to_fr_diff_wheel', 'base_link_to_mr_diff_wheel', 'base_link_to_rr_diff_wheel']

    #wheel_separation: 0.6096

    # Odometry covariances for the encoder output of the robot. These values should
    # be tuned to your robot's sample odometry data, but these values are a good place
    # to start
    pose_covariance_diagonal : [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]
    twist_covariance_diagonal: [0.001, 0.001, 1000000.0, 1000000.0, 1000000.0, 1000.0]

    # Top level frame (link) of the robot description
    enable_odom_tf: false
    base_frame_id: base_link
    odom_frame_id: odom

    # Velocity and acceleration limits for the robot
    linear:
      x:
        has_velocity_limits    : true
        max_velocity           : 5   # m/s
        has_acceleration_limits: true
        max_acceleration       : 5   # m/s^2
    angular:
      z:
        has_velocity_limits    : true
        max_velocity           : 10   # rad/s
        has_acceleration_limits: true
        max_acceleration       : 10  # rad/s^2

/gazebo_ros_control/pid_gains:
    base_link_to_fl_diff_wheel: {p: 10.0, i: 0.01, d: 0.0}
    base_link_to_ml_diff_wheel: {p: 10.0, i: 0.01, d: 0.0}
    base_link_to_rl_diff_wheel: {p: 10.0, i: 0.01, d: 0.0}
    base_link_to_fr_diff_wheel: {p: 10.0, i: 0.01, d: 0.0}
    base_link_to_mr_diff_wheel: {p: 10.0, i: 0.01, d: 0.0}
    base_link_to_rr_diff_wheel: {p: 10.0, i: 0.01, d: 0.0}